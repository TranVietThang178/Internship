
Lab9.2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000944  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000008  08000ad8  08000ad8  00010ad8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000ae0  08000ae0  00010ae8  2**0
                  CONTENTS
  4 .ARM          00000000  08000ae0  08000ae0  00010ae8  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000ae0  08000ae8  00010ae8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000ae0  08000ae0  00010ae0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000ae4  08000ae4  00010ae4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010ae8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000000  08000ae8  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000002c  08000ae8  0002002c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010ae8  2**0
                  CONTENTS, READONLY
 12 .comment      000000be  00000000  00000000  00010b18  2**0
                  CONTENTS, READONLY
 13 .debug_info   00005a30  00000000  00000000  00010bd6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000fcc  00000000  00000000  00016606  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000808  00000000  00000000  000175d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000032  00000000  00000000  00017de0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000dbc6  00000000  00000000  00017e12  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00004256  00000000  00000000  000259d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00043adc  00000000  00000000  00029c2e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00002304  00000000  00000000  0006d70c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005d  00000000  00000000  0006fa10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00000738  00000000  00000000  0006fa6d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000ac0 	.word	0x08000ac0

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000ac0 	.word	0x08000ac0

080001d4 <main>:
#define BUZZER_SET_OFF 0x00u

void BuzzerSetLogic(uint8_t buzzer_state);

int main(void)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	af00      	add	r7, sp, #0
	BuzzerControl_Init();
 80001d8:	f000 f84c 	bl	8000274 <BuzzerControl_Init>

	BuzzerControl_SetDutyCycle(20);
 80001dc:	2014      	movs	r0, #20
 80001de:	f000 f8cf 	bl	8000380 <BuzzerControl_SetDutyCycle>
	while(1)
	{
		BuzzerSetLogic(BUZZER_SET_ON);
 80001e2:	20ff      	movs	r0, #255	; 0xff
 80001e4:	f000 f801 	bl	80001ea <BuzzerSetLogic>
 80001e8:	e7fb      	b.n	80001e2 <main+0xe>

080001ea <BuzzerSetLogic>:
	}
}

void BuzzerSetLogic(uint8_t buzzer_state)
{
 80001ea:	b580      	push	{r7, lr}
 80001ec:	b082      	sub	sp, #8
 80001ee:	af00      	add	r7, sp, #0
 80001f0:	4603      	mov	r3, r0
 80001f2:	71fb      	strb	r3, [r7, #7]
	if ((buzzer_state != 0xFF) && (buzzer_state != 0x00))
 80001f4:	79fb      	ldrb	r3, [r7, #7]
 80001f6:	2bff      	cmp	r3, #255	; 0xff
 80001f8:	d002      	beq.n	8000200 <BuzzerSetLogic+0x16>
 80001fa:	79fb      	ldrb	r3, [r7, #7]
 80001fc:	2b00      	cmp	r3, #0
 80001fe:	d10a      	bne.n	8000216 <BuzzerSetLogic+0x2c>
		return;
	if (buzzer_state == BUZZER_SET_ON)
 8000200:	79fb      	ldrb	r3, [r7, #7]
 8000202:	2bff      	cmp	r3, #255	; 0xff
 8000204:	d103      	bne.n	800020e <BuzzerSetLogic+0x24>
	{
		BuzzerControl_SetDutyCycle(20);
 8000206:	2014      	movs	r0, #20
 8000208:	f000 f8ba 	bl	8000380 <BuzzerControl_SetDutyCycle>
 800020c:	e004      	b.n	8000218 <BuzzerSetLogic+0x2e>
	}
	else
	{
		BuzzerControl_SetDutyCycle(0);
 800020e:	2000      	movs	r0, #0
 8000210:	f000 f8b6 	bl	8000380 <BuzzerControl_SetDutyCycle>
 8000214:	e000      	b.n	8000218 <BuzzerSetLogic+0x2e>
		return;
 8000216:	bf00      	nop
	}
}
 8000218:	3708      	adds	r7, #8
 800021a:	46bd      	mov	sp, r7
 800021c:	bd80      	pop	{r7, pc}
	...

08000220 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000220:	480d      	ldr	r0, [pc, #52]	; (8000258 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000222:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000224:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000228:	480c      	ldr	r0, [pc, #48]	; (800025c <LoopForever+0x6>)
  ldr r1, =_edata
 800022a:	490d      	ldr	r1, [pc, #52]	; (8000260 <LoopForever+0xa>)
  ldr r2, =_sidata
 800022c:	4a0d      	ldr	r2, [pc, #52]	; (8000264 <LoopForever+0xe>)
  movs r3, #0
 800022e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000230:	e002      	b.n	8000238 <LoopCopyDataInit>

08000232 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000232:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000234:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000236:	3304      	adds	r3, #4

08000238 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000238:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800023a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800023c:	d3f9      	bcc.n	8000232 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800023e:	4a0a      	ldr	r2, [pc, #40]	; (8000268 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000240:	4c0a      	ldr	r4, [pc, #40]	; (800026c <LoopForever+0x16>)
  movs r3, #0
 8000242:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000244:	e001      	b.n	800024a <LoopFillZerobss>

08000246 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000246:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000248:	3204      	adds	r2, #4

0800024a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800024a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800024c:	d3fb      	bcc.n	8000246 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800024e:	f000 fc13 	bl	8000a78 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000252:	f7ff ffbf 	bl	80001d4 <main>

08000256 <LoopForever>:

LoopForever:
  b LoopForever
 8000256:	e7fe      	b.n	8000256 <LoopForever>
  ldr   r0, =_estack
 8000258:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800025c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000260:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000264:	08000ae8 	.word	0x08000ae8
  ldr r2, =_sbss
 8000268:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800026c:	2000002c 	.word	0x2000002c

08000270 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000270:	e7fe      	b.n	8000270 <ADC_IRQHandler>
	...

08000274 <BuzzerControl_Init>:
 8000274:	b580      	push	{r7, lr}
 8000276:	af00      	add	r7, sp, #0
 8000278:	f241 3288 	movw	r2, #5000	; 0x1388
 800027c:	2120      	movs	r1, #32
 800027e:	2000      	movs	r0, #0
 8000280:	f000 f80e 	bl	80002a0 <BUZZTIM_InitTimer>
 8000284:	4b04      	ldr	r3, [pc, #16]	; (8000298 <BuzzerControl_Init+0x24>)
 8000286:	e893 0003 	ldmia.w	r3, {r0, r1}
 800028a:	f000 f831 	bl	80002f0 <BUZZTIM_InitPWMChannel>
 800028e:	4b03      	ldr	r3, [pc, #12]	; (800029c <BuzzerControl_Init+0x28>)
 8000290:	2201      	movs	r2, #1
 8000292:	701a      	strb	r2, [r3, #0]
 8000294:	bf00      	nop
 8000296:	bd80      	pop	{r7, pc}
 8000298:	08000ad8 	.word	0x08000ad8
 800029c:	2000001c 	.word	0x2000001c

080002a0 <BUZZTIM_InitTimer>:
 80002a0:	b580      	push	{r7, lr}
 80002a2:	b088      	sub	sp, #32
 80002a4:	af00      	add	r7, sp, #0
 80002a6:	4603      	mov	r3, r0
 80002a8:	60b9      	str	r1, [r7, #8]
 80002aa:	607a      	str	r2, [r7, #4]
 80002ac:	73fb      	strb	r3, [r7, #15]
 80002ae:	2101      	movs	r1, #1
 80002b0:	2002      	movs	r0, #2
 80002b2:	f000 fa11 	bl	80006d8 <RCC_APB1PeriphClockCmd>
 80002b6:	68bb      	ldr	r3, [r7, #8]
 80002b8:	b29b      	uxth	r3, r3
 80002ba:	3b01      	subs	r3, #1
 80002bc:	b29b      	uxth	r3, r3
 80002be:	82bb      	strh	r3, [r7, #20]
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	3b01      	subs	r3, #1
 80002c4:	61bb      	str	r3, [r7, #24]
 80002c6:	2300      	movs	r3, #0
 80002c8:	83bb      	strh	r3, [r7, #28]
 80002ca:	2300      	movs	r3, #0
 80002cc:	82fb      	strh	r3, [r7, #22]
 80002ce:	f107 0314 	add.w	r3, r7, #20
 80002d2:	4619      	mov	r1, r3
 80002d4:	4805      	ldr	r0, [pc, #20]	; (80002ec <BUZZTIM_InitTimer+0x4c>)
 80002d6:	f000 fa1f 	bl	8000718 <TIM_TimeBaseInit>
 80002da:	2101      	movs	r1, #1
 80002dc:	4803      	ldr	r0, [pc, #12]	; (80002ec <BUZZTIM_InitTimer+0x4c>)
 80002de:	f000 fa87 	bl	80007f0 <TIM_Cmd>
 80002e2:	bf00      	nop
 80002e4:	3720      	adds	r7, #32
 80002e6:	46bd      	mov	sp, r7
 80002e8:	bd80      	pop	{r7, pc}
 80002ea:	bf00      	nop
 80002ec:	40000400 	.word	0x40000400

080002f0 <BUZZTIM_InitPWMChannel>:
 80002f0:	b580      	push	{r7, lr}
 80002f2:	b08a      	sub	sp, #40	; 0x28
 80002f4:	af00      	add	r7, sp, #0
 80002f6:	463b      	mov	r3, r7
 80002f8:	e883 0003 	stmia.w	r3, {r0, r1}
 80002fc:	2101      	movs	r1, #1
 80002fe:	2004      	movs	r0, #4
 8000300:	f000 f9ca 	bl	8000698 <RCC_AHB1PeriphClockCmd>
 8000304:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000308:	623b      	str	r3, [r7, #32]
 800030a:	2302      	movs	r3, #2
 800030c:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 8000310:	2302      	movs	r3, #2
 8000312:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
 8000316:	2300      	movs	r3, #0
 8000318:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 800031c:	2301      	movs	r3, #1
 800031e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8000322:	f107 0320 	add.w	r3, r7, #32
 8000326:	4619      	mov	r1, r3
 8000328:	4813      	ldr	r0, [pc, #76]	; (8000378 <BUZZTIM_InitPWMChannel+0x88>)
 800032a:	f000 f8de 	bl	80004ea <GPIO_Init>
 800032e:	2202      	movs	r2, #2
 8000330:	2109      	movs	r1, #9
 8000332:	4811      	ldr	r0, [pc, #68]	; (8000378 <BUZZTIM_InitPWMChannel+0x88>)
 8000334:	f000 f967 	bl	8000606 <GPIO_PinAFConfig>
 8000338:	2360      	movs	r3, #96	; 0x60
 800033a:	81bb      	strh	r3, [r7, #12]
 800033c:	2301      	movs	r3, #1
 800033e:	81fb      	strh	r3, [r7, #14]
 8000340:	2304      	movs	r3, #4
 8000342:	823b      	strh	r3, [r7, #16]
 8000344:	2300      	movs	r3, #0
 8000346:	833b      	strh	r3, [r7, #24]
 8000348:	2308      	movs	r3, #8
 800034a:	837b      	strh	r3, [r7, #26]
 800034c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000350:	83bb      	strh	r3, [r7, #28]
 8000352:	2300      	movs	r3, #0
 8000354:	83fb      	strh	r3, [r7, #30]
 8000356:	2300      	movs	r3, #0
 8000358:	617b      	str	r3, [r7, #20]
 800035a:	f107 030c 	add.w	r3, r7, #12
 800035e:	4619      	mov	r1, r3
 8000360:	4806      	ldr	r0, [pc, #24]	; (800037c <BUZZTIM_InitPWMChannel+0x8c>)
 8000362:	f000 fa65 	bl	8000830 <TIM_OC4Init>
 8000366:	2101      	movs	r1, #1
 8000368:	4804      	ldr	r0, [pc, #16]	; (800037c <BUZZTIM_InitPWMChannel+0x8c>)
 800036a:	f000 fad7 	bl	800091c <TIM_CtrlPWMOutputs>
 800036e:	bf00      	nop
 8000370:	3728      	adds	r7, #40	; 0x28
 8000372:	46bd      	mov	sp, r7
 8000374:	bd80      	pop	{r7, pc}
 8000376:	bf00      	nop
 8000378:	40020800 	.word	0x40020800
 800037c:	40000400 	.word	0x40000400

08000380 <BuzzerControl_SetDutyCycle>:
 8000380:	b580      	push	{r7, lr}
 8000382:	b084      	sub	sp, #16
 8000384:	af00      	add	r7, sp, #0
 8000386:	4603      	mov	r3, r0
 8000388:	71fb      	strb	r3, [r7, #7]
 800038a:	4b0a      	ldr	r3, [pc, #40]	; (80003b4 <BuzzerControl_SetDutyCycle+0x34>)
 800038c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800038e:	60fb      	str	r3, [r7, #12]
 8000390:	79fb      	ldrb	r3, [r7, #7]
 8000392:	68fa      	ldr	r2, [r7, #12]
 8000394:	fb02 f303 	mul.w	r3, r2, r3
 8000398:	4a07      	ldr	r2, [pc, #28]	; (80003b8 <BuzzerControl_SetDutyCycle+0x38>)
 800039a:	fba2 2303 	umull	r2, r3, r2, r3
 800039e:	095b      	lsrs	r3, r3, #5
 80003a0:	60bb      	str	r3, [r7, #8]
 80003a2:	68b9      	ldr	r1, [r7, #8]
 80003a4:	4803      	ldr	r0, [pc, #12]	; (80003b4 <BuzzerControl_SetDutyCycle+0x34>)
 80003a6:	f000 faab 	bl	8000900 <TIM_SetCompare4>
 80003aa:	bf00      	nop
 80003ac:	3710      	adds	r7, #16
 80003ae:	46bd      	mov	sp, r7
 80003b0:	bd80      	pop	{r7, pc}
 80003b2:	bf00      	nop
 80003b4:	40000400 	.word	0x40000400
 80003b8:	51eb851f 	.word	0x51eb851f

080003bc <SysTick_Handler>:
 80003bc:	b480      	push	{r7}
 80003be:	af00      	add	r7, sp, #0
 80003c0:	4b04      	ldr	r3, [pc, #16]	; (80003d4 <SysTick_Handler+0x18>)
 80003c2:	681b      	ldr	r3, [r3, #0]
 80003c4:	3301      	adds	r3, #1
 80003c6:	4a03      	ldr	r2, [pc, #12]	; (80003d4 <SysTick_Handler+0x18>)
 80003c8:	6013      	str	r3, [r2, #0]
 80003ca:	bf00      	nop
 80003cc:	46bd      	mov	sp, r7
 80003ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003d2:	4770      	bx	lr
 80003d4:	20000020 	.word	0x20000020

080003d8 <USART2_IRQHandler>:
 80003d8:	b580      	push	{r7, lr}
 80003da:	b082      	sub	sp, #8
 80003dc:	af00      	add	r7, sp, #0
 80003de:	b672      	cpsid	i
 80003e0:	f240 5125 	movw	r1, #1317	; 0x525
 80003e4:	480e      	ldr	r0, [pc, #56]	; (8000420 <USART2_IRQHandler+0x48>)
 80003e6:	f000 facf 	bl	8000988 <USART_GetITStatus>
 80003ea:	4603      	mov	r3, r0
 80003ec:	2b01      	cmp	r3, #1
 80003ee:	d112      	bne.n	8000416 <USART2_IRQHandler+0x3e>
 80003f0:	4b0c      	ldr	r3, [pc, #48]	; (8000424 <USART2_IRQHandler+0x4c>)
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	607b      	str	r3, [r7, #4]
 80003f6:	480a      	ldr	r0, [pc, #40]	; (8000420 <USART2_IRQHandler+0x48>)
 80003f8:	f000 fab6 	bl	8000968 <USART_ReceiveData>
 80003fc:	4603      	mov	r3, r0
 80003fe:	b2db      	uxtb	r3, r3
 8000400:	70fb      	strb	r3, [r7, #3]
 8000402:	1cfb      	adds	r3, r7, #3
 8000404:	4619      	mov	r1, r3
 8000406:	6878      	ldr	r0, [r7, #4]
 8000408:	f000 f821 	bl	800044e <bufEnDat>
 800040c:	f240 5125 	movw	r1, #1317	; 0x525
 8000410:	4803      	ldr	r0, [pc, #12]	; (8000420 <USART2_IRQHandler+0x48>)
 8000412:	f000 fb14 	bl	8000a3e <USART_ClearITPendingBit>
 8000416:	b662      	cpsie	i
 8000418:	bf00      	nop
 800041a:	3708      	adds	r7, #8
 800041c:	46bd      	mov	sp, r7
 800041e:	bd80      	pop	{r7, pc}
 8000420:	40004400 	.word	0x40004400
 8000424:	20000024 	.word	0x20000024

08000428 <bufIsFull>:
 8000428:	b480      	push	{r7}
 800042a:	b083      	sub	sp, #12
 800042c:	af00      	add	r7, sp, #0
 800042e:	6078      	str	r0, [r7, #4]
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	885a      	ldrh	r2, [r3, #2]
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	881b      	ldrh	r3, [r3, #0]
 8000438:	429a      	cmp	r2, r3
 800043a:	bf2c      	ite	cs
 800043c:	2301      	movcs	r3, #1
 800043e:	2300      	movcc	r3, #0
 8000440:	b2db      	uxtb	r3, r3
 8000442:	4618      	mov	r0, r3
 8000444:	370c      	adds	r7, #12
 8000446:	46bd      	mov	sp, r7
 8000448:	f85d 7b04 	ldr.w	r7, [sp], #4
 800044c:	4770      	bx	lr

0800044e <bufEnDat>:
 800044e:	b580      	push	{r7, lr}
 8000450:	b084      	sub	sp, #16
 8000452:	af00      	add	r7, sp, #0
 8000454:	6078      	str	r0, [r7, #4]
 8000456:	6039      	str	r1, [r7, #0]
 8000458:	b672      	cpsid	i
 800045a:	2300      	movs	r3, #0
 800045c:	73fb      	strb	r3, [r7, #15]
 800045e:	e021      	b.n	80004a4 <bufEnDat+0x56>
 8000460:	7bfb      	ldrb	r3, [r7, #15]
 8000462:	683a      	ldr	r2, [r7, #0]
 8000464:	441a      	add	r2, r3
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	68db      	ldr	r3, [r3, #12]
 800046a:	6879      	ldr	r1, [r7, #4]
 800046c:	88c9      	ldrh	r1, [r1, #6]
 800046e:	440b      	add	r3, r1
 8000470:	7812      	ldrb	r2, [r2, #0]
 8000472:	701a      	strb	r2, [r3, #0]
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	88db      	ldrh	r3, [r3, #6]
 8000478:	3301      	adds	r3, #1
 800047a:	b29b      	uxth	r3, r3
 800047c:	b21a      	sxth	r2, r3
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	881b      	ldrh	r3, [r3, #0]
 8000482:	3b01      	subs	r3, #1
 8000484:	b29b      	uxth	r3, r3
 8000486:	b21b      	sxth	r3, r3
 8000488:	4013      	ands	r3, r2
 800048a:	b21b      	sxth	r3, r3
 800048c:	b29a      	uxth	r2, r3
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	80da      	strh	r2, [r3, #6]
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	885b      	ldrh	r3, [r3, #2]
 8000496:	3301      	adds	r3, #1
 8000498:	b29a      	uxth	r2, r3
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	805a      	strh	r2, [r3, #2]
 800049e:	7bfb      	ldrb	r3, [r7, #15]
 80004a0:	3301      	adds	r3, #1
 80004a2:	73fb      	strb	r3, [r7, #15]
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	791b      	ldrb	r3, [r3, #4]
 80004a8:	7bfa      	ldrb	r2, [r7, #15]
 80004aa:	429a      	cmp	r2, r3
 80004ac:	d3d8      	bcc.n	8000460 <bufEnDat+0x12>
 80004ae:	6878      	ldr	r0, [r7, #4]
 80004b0:	f7ff ffba 	bl	8000428 <bufIsFull>
 80004b4:	4603      	mov	r3, r0
 80004b6:	2b00      	cmp	r3, #0
 80004b8:	d011      	beq.n	80004de <bufEnDat+0x90>
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	891a      	ldrh	r2, [r3, #8]
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	791b      	ldrb	r3, [r3, #4]
 80004c2:	b29b      	uxth	r3, r3
 80004c4:	4413      	add	r3, r2
 80004c6:	b29b      	uxth	r3, r3
 80004c8:	b21a      	sxth	r2, r3
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	881b      	ldrh	r3, [r3, #0]
 80004ce:	3b01      	subs	r3, #1
 80004d0:	b29b      	uxth	r3, r3
 80004d2:	b21b      	sxth	r3, r3
 80004d4:	4013      	ands	r3, r2
 80004d6:	b21b      	sxth	r3, r3
 80004d8:	b29a      	uxth	r2, r3
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	811a      	strh	r2, [r3, #8]
 80004de:	b662      	cpsie	i
 80004e0:	2300      	movs	r3, #0
 80004e2:	4618      	mov	r0, r3
 80004e4:	3710      	adds	r7, #16
 80004e6:	46bd      	mov	sp, r7
 80004e8:	bd80      	pop	{r7, pc}

080004ea <GPIO_Init>:
 80004ea:	b480      	push	{r7}
 80004ec:	b087      	sub	sp, #28
 80004ee:	af00      	add	r7, sp, #0
 80004f0:	6078      	str	r0, [r7, #4]
 80004f2:	6039      	str	r1, [r7, #0]
 80004f4:	2300      	movs	r3, #0
 80004f6:	617b      	str	r3, [r7, #20]
 80004f8:	2300      	movs	r3, #0
 80004fa:	613b      	str	r3, [r7, #16]
 80004fc:	2300      	movs	r3, #0
 80004fe:	60fb      	str	r3, [r7, #12]
 8000500:	2300      	movs	r3, #0
 8000502:	617b      	str	r3, [r7, #20]
 8000504:	e076      	b.n	80005f4 <GPIO_Init+0x10a>
 8000506:	2201      	movs	r2, #1
 8000508:	697b      	ldr	r3, [r7, #20]
 800050a:	fa02 f303 	lsl.w	r3, r2, r3
 800050e:	613b      	str	r3, [r7, #16]
 8000510:	683b      	ldr	r3, [r7, #0]
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	693a      	ldr	r2, [r7, #16]
 8000516:	4013      	ands	r3, r2
 8000518:	60fb      	str	r3, [r7, #12]
 800051a:	68fa      	ldr	r2, [r7, #12]
 800051c:	693b      	ldr	r3, [r7, #16]
 800051e:	429a      	cmp	r2, r3
 8000520:	d165      	bne.n	80005ee <GPIO_Init+0x104>
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	681a      	ldr	r2, [r3, #0]
 8000526:	697b      	ldr	r3, [r7, #20]
 8000528:	005b      	lsls	r3, r3, #1
 800052a:	2103      	movs	r1, #3
 800052c:	fa01 f303 	lsl.w	r3, r1, r3
 8000530:	43db      	mvns	r3, r3
 8000532:	401a      	ands	r2, r3
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	601a      	str	r2, [r3, #0]
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	681a      	ldr	r2, [r3, #0]
 800053c:	683b      	ldr	r3, [r7, #0]
 800053e:	791b      	ldrb	r3, [r3, #4]
 8000540:	4619      	mov	r1, r3
 8000542:	697b      	ldr	r3, [r7, #20]
 8000544:	005b      	lsls	r3, r3, #1
 8000546:	fa01 f303 	lsl.w	r3, r1, r3
 800054a:	431a      	orrs	r2, r3
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	601a      	str	r2, [r3, #0]
 8000550:	683b      	ldr	r3, [r7, #0]
 8000552:	791b      	ldrb	r3, [r3, #4]
 8000554:	2b01      	cmp	r3, #1
 8000556:	d003      	beq.n	8000560 <GPIO_Init+0x76>
 8000558:	683b      	ldr	r3, [r7, #0]
 800055a:	791b      	ldrb	r3, [r3, #4]
 800055c:	2b02      	cmp	r3, #2
 800055e:	d12e      	bne.n	80005be <GPIO_Init+0xd4>
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	689a      	ldr	r2, [r3, #8]
 8000564:	697b      	ldr	r3, [r7, #20]
 8000566:	005b      	lsls	r3, r3, #1
 8000568:	2103      	movs	r1, #3
 800056a:	fa01 f303 	lsl.w	r3, r1, r3
 800056e:	43db      	mvns	r3, r3
 8000570:	401a      	ands	r2, r3
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	609a      	str	r2, [r3, #8]
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	689a      	ldr	r2, [r3, #8]
 800057a:	683b      	ldr	r3, [r7, #0]
 800057c:	795b      	ldrb	r3, [r3, #5]
 800057e:	4619      	mov	r1, r3
 8000580:	697b      	ldr	r3, [r7, #20]
 8000582:	005b      	lsls	r3, r3, #1
 8000584:	fa01 f303 	lsl.w	r3, r1, r3
 8000588:	431a      	orrs	r2, r3
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	609a      	str	r2, [r3, #8]
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	685a      	ldr	r2, [r3, #4]
 8000592:	697b      	ldr	r3, [r7, #20]
 8000594:	b29b      	uxth	r3, r3
 8000596:	4619      	mov	r1, r3
 8000598:	2301      	movs	r3, #1
 800059a:	408b      	lsls	r3, r1
 800059c:	43db      	mvns	r3, r3
 800059e:	401a      	ands	r2, r3
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	605a      	str	r2, [r3, #4]
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	685b      	ldr	r3, [r3, #4]
 80005a8:	683a      	ldr	r2, [r7, #0]
 80005aa:	7992      	ldrb	r2, [r2, #6]
 80005ac:	4611      	mov	r1, r2
 80005ae:	697a      	ldr	r2, [r7, #20]
 80005b0:	b292      	uxth	r2, r2
 80005b2:	fa01 f202 	lsl.w	r2, r1, r2
 80005b6:	b292      	uxth	r2, r2
 80005b8:	431a      	orrs	r2, r3
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	605a      	str	r2, [r3, #4]
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	68da      	ldr	r2, [r3, #12]
 80005c2:	697b      	ldr	r3, [r7, #20]
 80005c4:	b29b      	uxth	r3, r3
 80005c6:	005b      	lsls	r3, r3, #1
 80005c8:	2103      	movs	r1, #3
 80005ca:	fa01 f303 	lsl.w	r3, r1, r3
 80005ce:	43db      	mvns	r3, r3
 80005d0:	401a      	ands	r2, r3
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	60da      	str	r2, [r3, #12]
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	68da      	ldr	r2, [r3, #12]
 80005da:	683b      	ldr	r3, [r7, #0]
 80005dc:	79db      	ldrb	r3, [r3, #7]
 80005de:	4619      	mov	r1, r3
 80005e0:	697b      	ldr	r3, [r7, #20]
 80005e2:	005b      	lsls	r3, r3, #1
 80005e4:	fa01 f303 	lsl.w	r3, r1, r3
 80005e8:	431a      	orrs	r2, r3
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	60da      	str	r2, [r3, #12]
 80005ee:	697b      	ldr	r3, [r7, #20]
 80005f0:	3301      	adds	r3, #1
 80005f2:	617b      	str	r3, [r7, #20]
 80005f4:	697b      	ldr	r3, [r7, #20]
 80005f6:	2b0f      	cmp	r3, #15
 80005f8:	d985      	bls.n	8000506 <GPIO_Init+0x1c>
 80005fa:	bf00      	nop
 80005fc:	371c      	adds	r7, #28
 80005fe:	46bd      	mov	sp, r7
 8000600:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000604:	4770      	bx	lr

08000606 <GPIO_PinAFConfig>:
 8000606:	b480      	push	{r7}
 8000608:	b085      	sub	sp, #20
 800060a:	af00      	add	r7, sp, #0
 800060c:	6078      	str	r0, [r7, #4]
 800060e:	460b      	mov	r3, r1
 8000610:	807b      	strh	r3, [r7, #2]
 8000612:	4613      	mov	r3, r2
 8000614:	707b      	strb	r3, [r7, #1]
 8000616:	2300      	movs	r3, #0
 8000618:	60fb      	str	r3, [r7, #12]
 800061a:	2300      	movs	r3, #0
 800061c:	60bb      	str	r3, [r7, #8]
 800061e:	787a      	ldrb	r2, [r7, #1]
 8000620:	887b      	ldrh	r3, [r7, #2]
 8000622:	f003 0307 	and.w	r3, r3, #7
 8000626:	009b      	lsls	r3, r3, #2
 8000628:	fa02 f303 	lsl.w	r3, r2, r3
 800062c:	60fb      	str	r3, [r7, #12]
 800062e:	887b      	ldrh	r3, [r7, #2]
 8000630:	08db      	lsrs	r3, r3, #3
 8000632:	b29b      	uxth	r3, r3
 8000634:	461a      	mov	r2, r3
 8000636:	687b      	ldr	r3, [r7, #4]
 8000638:	3208      	adds	r2, #8
 800063a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800063e:	887b      	ldrh	r3, [r7, #2]
 8000640:	f003 0307 	and.w	r3, r3, #7
 8000644:	009b      	lsls	r3, r3, #2
 8000646:	210f      	movs	r1, #15
 8000648:	fa01 f303 	lsl.w	r3, r1, r3
 800064c:	43db      	mvns	r3, r3
 800064e:	8879      	ldrh	r1, [r7, #2]
 8000650:	08c9      	lsrs	r1, r1, #3
 8000652:	b289      	uxth	r1, r1
 8000654:	4608      	mov	r0, r1
 8000656:	ea02 0103 	and.w	r1, r2, r3
 800065a:	687b      	ldr	r3, [r7, #4]
 800065c:	f100 0208 	add.w	r2, r0, #8
 8000660:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000664:	887b      	ldrh	r3, [r7, #2]
 8000666:	08db      	lsrs	r3, r3, #3
 8000668:	b29b      	uxth	r3, r3
 800066a:	461a      	mov	r2, r3
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	3208      	adds	r2, #8
 8000670:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000674:	68fa      	ldr	r2, [r7, #12]
 8000676:	4313      	orrs	r3, r2
 8000678:	60bb      	str	r3, [r7, #8]
 800067a:	887b      	ldrh	r3, [r7, #2]
 800067c:	08db      	lsrs	r3, r3, #3
 800067e:	b29b      	uxth	r3, r3
 8000680:	461a      	mov	r2, r3
 8000682:	687b      	ldr	r3, [r7, #4]
 8000684:	3208      	adds	r2, #8
 8000686:	68b9      	ldr	r1, [r7, #8]
 8000688:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800068c:	bf00      	nop
 800068e:	3714      	adds	r7, #20
 8000690:	46bd      	mov	sp, r7
 8000692:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000696:	4770      	bx	lr

08000698 <RCC_AHB1PeriphClockCmd>:
 8000698:	b480      	push	{r7}
 800069a:	b083      	sub	sp, #12
 800069c:	af00      	add	r7, sp, #0
 800069e:	6078      	str	r0, [r7, #4]
 80006a0:	460b      	mov	r3, r1
 80006a2:	70fb      	strb	r3, [r7, #3]
 80006a4:	78fb      	ldrb	r3, [r7, #3]
 80006a6:	2b00      	cmp	r3, #0
 80006a8:	d006      	beq.n	80006b8 <RCC_AHB1PeriphClockCmd+0x20>
 80006aa:	4b0a      	ldr	r3, [pc, #40]	; (80006d4 <RCC_AHB1PeriphClockCmd+0x3c>)
 80006ac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80006ae:	4909      	ldr	r1, [pc, #36]	; (80006d4 <RCC_AHB1PeriphClockCmd+0x3c>)
 80006b0:	687b      	ldr	r3, [r7, #4]
 80006b2:	4313      	orrs	r3, r2
 80006b4:	630b      	str	r3, [r1, #48]	; 0x30
 80006b6:	e006      	b.n	80006c6 <RCC_AHB1PeriphClockCmd+0x2e>
 80006b8:	4b06      	ldr	r3, [pc, #24]	; (80006d4 <RCC_AHB1PeriphClockCmd+0x3c>)
 80006ba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	43db      	mvns	r3, r3
 80006c0:	4904      	ldr	r1, [pc, #16]	; (80006d4 <RCC_AHB1PeriphClockCmd+0x3c>)
 80006c2:	4013      	ands	r3, r2
 80006c4:	630b      	str	r3, [r1, #48]	; 0x30
 80006c6:	bf00      	nop
 80006c8:	370c      	adds	r7, #12
 80006ca:	46bd      	mov	sp, r7
 80006cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006d0:	4770      	bx	lr
 80006d2:	bf00      	nop
 80006d4:	40023800 	.word	0x40023800

080006d8 <RCC_APB1PeriphClockCmd>:
 80006d8:	b480      	push	{r7}
 80006da:	b083      	sub	sp, #12
 80006dc:	af00      	add	r7, sp, #0
 80006de:	6078      	str	r0, [r7, #4]
 80006e0:	460b      	mov	r3, r1
 80006e2:	70fb      	strb	r3, [r7, #3]
 80006e4:	78fb      	ldrb	r3, [r7, #3]
 80006e6:	2b00      	cmp	r3, #0
 80006e8:	d006      	beq.n	80006f8 <RCC_APB1PeriphClockCmd+0x20>
 80006ea:	4b0a      	ldr	r3, [pc, #40]	; (8000714 <RCC_APB1PeriphClockCmd+0x3c>)
 80006ec:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80006ee:	4909      	ldr	r1, [pc, #36]	; (8000714 <RCC_APB1PeriphClockCmd+0x3c>)
 80006f0:	687b      	ldr	r3, [r7, #4]
 80006f2:	4313      	orrs	r3, r2
 80006f4:	640b      	str	r3, [r1, #64]	; 0x40
 80006f6:	e006      	b.n	8000706 <RCC_APB1PeriphClockCmd+0x2e>
 80006f8:	4b06      	ldr	r3, [pc, #24]	; (8000714 <RCC_APB1PeriphClockCmd+0x3c>)
 80006fa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	43db      	mvns	r3, r3
 8000700:	4904      	ldr	r1, [pc, #16]	; (8000714 <RCC_APB1PeriphClockCmd+0x3c>)
 8000702:	4013      	ands	r3, r2
 8000704:	640b      	str	r3, [r1, #64]	; 0x40
 8000706:	bf00      	nop
 8000708:	370c      	adds	r7, #12
 800070a:	46bd      	mov	sp, r7
 800070c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000710:	4770      	bx	lr
 8000712:	bf00      	nop
 8000714:	40023800 	.word	0x40023800

08000718 <TIM_TimeBaseInit>:
 8000718:	b480      	push	{r7}
 800071a:	b085      	sub	sp, #20
 800071c:	af00      	add	r7, sp, #0
 800071e:	6078      	str	r0, [r7, #4]
 8000720:	6039      	str	r1, [r7, #0]
 8000722:	2300      	movs	r3, #0
 8000724:	81fb      	strh	r3, [r7, #14]
 8000726:	687b      	ldr	r3, [r7, #4]
 8000728:	881b      	ldrh	r3, [r3, #0]
 800072a:	81fb      	strh	r3, [r7, #14]
 800072c:	687b      	ldr	r3, [r7, #4]
 800072e:	4a29      	ldr	r2, [pc, #164]	; (80007d4 <TIM_TimeBaseInit+0xbc>)
 8000730:	4293      	cmp	r3, r2
 8000732:	d013      	beq.n	800075c <TIM_TimeBaseInit+0x44>
 8000734:	687b      	ldr	r3, [r7, #4]
 8000736:	4a28      	ldr	r2, [pc, #160]	; (80007d8 <TIM_TimeBaseInit+0xc0>)
 8000738:	4293      	cmp	r3, r2
 800073a:	d00f      	beq.n	800075c <TIM_TimeBaseInit+0x44>
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8000742:	d00b      	beq.n	800075c <TIM_TimeBaseInit+0x44>
 8000744:	687b      	ldr	r3, [r7, #4]
 8000746:	4a25      	ldr	r2, [pc, #148]	; (80007dc <TIM_TimeBaseInit+0xc4>)
 8000748:	4293      	cmp	r3, r2
 800074a:	d007      	beq.n	800075c <TIM_TimeBaseInit+0x44>
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	4a24      	ldr	r2, [pc, #144]	; (80007e0 <TIM_TimeBaseInit+0xc8>)
 8000750:	4293      	cmp	r3, r2
 8000752:	d003      	beq.n	800075c <TIM_TimeBaseInit+0x44>
 8000754:	687b      	ldr	r3, [r7, #4]
 8000756:	4a23      	ldr	r2, [pc, #140]	; (80007e4 <TIM_TimeBaseInit+0xcc>)
 8000758:	4293      	cmp	r3, r2
 800075a:	d108      	bne.n	800076e <TIM_TimeBaseInit+0x56>
 800075c:	89fb      	ldrh	r3, [r7, #14]
 800075e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8000762:	81fb      	strh	r3, [r7, #14]
 8000764:	683b      	ldr	r3, [r7, #0]
 8000766:	885a      	ldrh	r2, [r3, #2]
 8000768:	89fb      	ldrh	r3, [r7, #14]
 800076a:	4313      	orrs	r3, r2
 800076c:	81fb      	strh	r3, [r7, #14]
 800076e:	687b      	ldr	r3, [r7, #4]
 8000770:	4a1d      	ldr	r2, [pc, #116]	; (80007e8 <TIM_TimeBaseInit+0xd0>)
 8000772:	4293      	cmp	r3, r2
 8000774:	d00c      	beq.n	8000790 <TIM_TimeBaseInit+0x78>
 8000776:	687b      	ldr	r3, [r7, #4]
 8000778:	4a1c      	ldr	r2, [pc, #112]	; (80007ec <TIM_TimeBaseInit+0xd4>)
 800077a:	4293      	cmp	r3, r2
 800077c:	d008      	beq.n	8000790 <TIM_TimeBaseInit+0x78>
 800077e:	89fb      	ldrh	r3, [r7, #14]
 8000780:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8000784:	81fb      	strh	r3, [r7, #14]
 8000786:	683b      	ldr	r3, [r7, #0]
 8000788:	891a      	ldrh	r2, [r3, #8]
 800078a:	89fb      	ldrh	r3, [r7, #14]
 800078c:	4313      	orrs	r3, r2
 800078e:	81fb      	strh	r3, [r7, #14]
 8000790:	687b      	ldr	r3, [r7, #4]
 8000792:	89fa      	ldrh	r2, [r7, #14]
 8000794:	801a      	strh	r2, [r3, #0]
 8000796:	683b      	ldr	r3, [r7, #0]
 8000798:	685a      	ldr	r2, [r3, #4]
 800079a:	687b      	ldr	r3, [r7, #4]
 800079c:	62da      	str	r2, [r3, #44]	; 0x2c
 800079e:	683b      	ldr	r3, [r7, #0]
 80007a0:	881a      	ldrh	r2, [r3, #0]
 80007a2:	687b      	ldr	r3, [r7, #4]
 80007a4:	851a      	strh	r2, [r3, #40]	; 0x28
 80007a6:	687b      	ldr	r3, [r7, #4]
 80007a8:	4a0a      	ldr	r2, [pc, #40]	; (80007d4 <TIM_TimeBaseInit+0xbc>)
 80007aa:	4293      	cmp	r3, r2
 80007ac:	d003      	beq.n	80007b6 <TIM_TimeBaseInit+0x9e>
 80007ae:	687b      	ldr	r3, [r7, #4]
 80007b0:	4a09      	ldr	r2, [pc, #36]	; (80007d8 <TIM_TimeBaseInit+0xc0>)
 80007b2:	4293      	cmp	r3, r2
 80007b4:	d104      	bne.n	80007c0 <TIM_TimeBaseInit+0xa8>
 80007b6:	683b      	ldr	r3, [r7, #0]
 80007b8:	7a9b      	ldrb	r3, [r3, #10]
 80007ba:	b29a      	uxth	r2, r3
 80007bc:	687b      	ldr	r3, [r7, #4]
 80007be:	861a      	strh	r2, [r3, #48]	; 0x30
 80007c0:	687b      	ldr	r3, [r7, #4]
 80007c2:	2201      	movs	r2, #1
 80007c4:	829a      	strh	r2, [r3, #20]
 80007c6:	bf00      	nop
 80007c8:	3714      	adds	r7, #20
 80007ca:	46bd      	mov	sp, r7
 80007cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007d0:	4770      	bx	lr
 80007d2:	bf00      	nop
 80007d4:	40010000 	.word	0x40010000
 80007d8:	40010400 	.word	0x40010400
 80007dc:	40000400 	.word	0x40000400
 80007e0:	40000800 	.word	0x40000800
 80007e4:	40000c00 	.word	0x40000c00
 80007e8:	40001000 	.word	0x40001000
 80007ec:	40001400 	.word	0x40001400

080007f0 <TIM_Cmd>:
 80007f0:	b480      	push	{r7}
 80007f2:	b083      	sub	sp, #12
 80007f4:	af00      	add	r7, sp, #0
 80007f6:	6078      	str	r0, [r7, #4]
 80007f8:	460b      	mov	r3, r1
 80007fa:	70fb      	strb	r3, [r7, #3]
 80007fc:	78fb      	ldrb	r3, [r7, #3]
 80007fe:	2b00      	cmp	r3, #0
 8000800:	d008      	beq.n	8000814 <TIM_Cmd+0x24>
 8000802:	687b      	ldr	r3, [r7, #4]
 8000804:	881b      	ldrh	r3, [r3, #0]
 8000806:	b29b      	uxth	r3, r3
 8000808:	f043 0301 	orr.w	r3, r3, #1
 800080c:	b29a      	uxth	r2, r3
 800080e:	687b      	ldr	r3, [r7, #4]
 8000810:	801a      	strh	r2, [r3, #0]
 8000812:	e007      	b.n	8000824 <TIM_Cmd+0x34>
 8000814:	687b      	ldr	r3, [r7, #4]
 8000816:	881b      	ldrh	r3, [r3, #0]
 8000818:	b29b      	uxth	r3, r3
 800081a:	f023 0301 	bic.w	r3, r3, #1
 800081e:	b29a      	uxth	r2, r3
 8000820:	687b      	ldr	r3, [r7, #4]
 8000822:	801a      	strh	r2, [r3, #0]
 8000824:	bf00      	nop
 8000826:	370c      	adds	r7, #12
 8000828:	46bd      	mov	sp, r7
 800082a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800082e:	4770      	bx	lr

08000830 <TIM_OC4Init>:
 8000830:	b480      	push	{r7}
 8000832:	b085      	sub	sp, #20
 8000834:	af00      	add	r7, sp, #0
 8000836:	6078      	str	r0, [r7, #4]
 8000838:	6039      	str	r1, [r7, #0]
 800083a:	2300      	movs	r3, #0
 800083c:	81bb      	strh	r3, [r7, #12]
 800083e:	2300      	movs	r3, #0
 8000840:	817b      	strh	r3, [r7, #10]
 8000842:	2300      	movs	r3, #0
 8000844:	81fb      	strh	r3, [r7, #14]
 8000846:	687b      	ldr	r3, [r7, #4]
 8000848:	8c1b      	ldrh	r3, [r3, #32]
 800084a:	b29b      	uxth	r3, r3
 800084c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000850:	b29a      	uxth	r2, r3
 8000852:	687b      	ldr	r3, [r7, #4]
 8000854:	841a      	strh	r2, [r3, #32]
 8000856:	687b      	ldr	r3, [r7, #4]
 8000858:	8c1b      	ldrh	r3, [r3, #32]
 800085a:	817b      	strh	r3, [r7, #10]
 800085c:	687b      	ldr	r3, [r7, #4]
 800085e:	889b      	ldrh	r3, [r3, #4]
 8000860:	81fb      	strh	r3, [r7, #14]
 8000862:	687b      	ldr	r3, [r7, #4]
 8000864:	8b9b      	ldrh	r3, [r3, #28]
 8000866:	81bb      	strh	r3, [r7, #12]
 8000868:	89bb      	ldrh	r3, [r7, #12]
 800086a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800086e:	81bb      	strh	r3, [r7, #12]
 8000870:	89bb      	ldrh	r3, [r7, #12]
 8000872:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8000876:	81bb      	strh	r3, [r7, #12]
 8000878:	683b      	ldr	r3, [r7, #0]
 800087a:	881b      	ldrh	r3, [r3, #0]
 800087c:	021b      	lsls	r3, r3, #8
 800087e:	b29a      	uxth	r2, r3
 8000880:	89bb      	ldrh	r3, [r7, #12]
 8000882:	4313      	orrs	r3, r2
 8000884:	81bb      	strh	r3, [r7, #12]
 8000886:	897b      	ldrh	r3, [r7, #10]
 8000888:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800088c:	817b      	strh	r3, [r7, #10]
 800088e:	683b      	ldr	r3, [r7, #0]
 8000890:	899b      	ldrh	r3, [r3, #12]
 8000892:	031b      	lsls	r3, r3, #12
 8000894:	b29a      	uxth	r2, r3
 8000896:	897b      	ldrh	r3, [r7, #10]
 8000898:	4313      	orrs	r3, r2
 800089a:	817b      	strh	r3, [r7, #10]
 800089c:	683b      	ldr	r3, [r7, #0]
 800089e:	885b      	ldrh	r3, [r3, #2]
 80008a0:	031b      	lsls	r3, r3, #12
 80008a2:	b29a      	uxth	r2, r3
 80008a4:	897b      	ldrh	r3, [r7, #10]
 80008a6:	4313      	orrs	r3, r2
 80008a8:	817b      	strh	r3, [r7, #10]
 80008aa:	687b      	ldr	r3, [r7, #4]
 80008ac:	4a12      	ldr	r2, [pc, #72]	; (80008f8 <TIM_OC4Init+0xc8>)
 80008ae:	4293      	cmp	r3, r2
 80008b0:	d003      	beq.n	80008ba <TIM_OC4Init+0x8a>
 80008b2:	687b      	ldr	r3, [r7, #4]
 80008b4:	4a11      	ldr	r2, [pc, #68]	; (80008fc <TIM_OC4Init+0xcc>)
 80008b6:	4293      	cmp	r3, r2
 80008b8:	d10a      	bne.n	80008d0 <TIM_OC4Init+0xa0>
 80008ba:	89fb      	ldrh	r3, [r7, #14]
 80008bc:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80008c0:	81fb      	strh	r3, [r7, #14]
 80008c2:	683b      	ldr	r3, [r7, #0]
 80008c4:	8a1b      	ldrh	r3, [r3, #16]
 80008c6:	019b      	lsls	r3, r3, #6
 80008c8:	b29a      	uxth	r2, r3
 80008ca:	89fb      	ldrh	r3, [r7, #14]
 80008cc:	4313      	orrs	r3, r2
 80008ce:	81fb      	strh	r3, [r7, #14]
 80008d0:	687b      	ldr	r3, [r7, #4]
 80008d2:	89fa      	ldrh	r2, [r7, #14]
 80008d4:	809a      	strh	r2, [r3, #4]
 80008d6:	687b      	ldr	r3, [r7, #4]
 80008d8:	89ba      	ldrh	r2, [r7, #12]
 80008da:	839a      	strh	r2, [r3, #28]
 80008dc:	683b      	ldr	r3, [r7, #0]
 80008de:	689a      	ldr	r2, [r3, #8]
 80008e0:	687b      	ldr	r3, [r7, #4]
 80008e2:	641a      	str	r2, [r3, #64]	; 0x40
 80008e4:	687b      	ldr	r3, [r7, #4]
 80008e6:	897a      	ldrh	r2, [r7, #10]
 80008e8:	841a      	strh	r2, [r3, #32]
 80008ea:	bf00      	nop
 80008ec:	3714      	adds	r7, #20
 80008ee:	46bd      	mov	sp, r7
 80008f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008f4:	4770      	bx	lr
 80008f6:	bf00      	nop
 80008f8:	40010000 	.word	0x40010000
 80008fc:	40010400 	.word	0x40010400

08000900 <TIM_SetCompare4>:
 8000900:	b480      	push	{r7}
 8000902:	b083      	sub	sp, #12
 8000904:	af00      	add	r7, sp, #0
 8000906:	6078      	str	r0, [r7, #4]
 8000908:	6039      	str	r1, [r7, #0]
 800090a:	687b      	ldr	r3, [r7, #4]
 800090c:	683a      	ldr	r2, [r7, #0]
 800090e:	641a      	str	r2, [r3, #64]	; 0x40
 8000910:	bf00      	nop
 8000912:	370c      	adds	r7, #12
 8000914:	46bd      	mov	sp, r7
 8000916:	f85d 7b04 	ldr.w	r7, [sp], #4
 800091a:	4770      	bx	lr

0800091c <TIM_CtrlPWMOutputs>:
 800091c:	b480      	push	{r7}
 800091e:	b083      	sub	sp, #12
 8000920:	af00      	add	r7, sp, #0
 8000922:	6078      	str	r0, [r7, #4]
 8000924:	460b      	mov	r3, r1
 8000926:	70fb      	strb	r3, [r7, #3]
 8000928:	78fb      	ldrb	r3, [r7, #3]
 800092a:	2b00      	cmp	r3, #0
 800092c:	d00c      	beq.n	8000948 <TIM_CtrlPWMOutputs+0x2c>
 800092e:	687b      	ldr	r3, [r7, #4]
 8000930:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 8000934:	b29b      	uxth	r3, r3
 8000936:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800093a:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800093e:	b29a      	uxth	r2, r3
 8000940:	687b      	ldr	r3, [r7, #4]
 8000942:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8000946:	e009      	b.n	800095c <TIM_CtrlPWMOutputs+0x40>
 8000948:	687b      	ldr	r3, [r7, #4]
 800094a:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 800094e:	b29b      	uxth	r3, r3
 8000950:	f3c3 030e 	ubfx	r3, r3, #0, #15
 8000954:	b29a      	uxth	r2, r3
 8000956:	687b      	ldr	r3, [r7, #4]
 8000958:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 800095c:	bf00      	nop
 800095e:	370c      	adds	r7, #12
 8000960:	46bd      	mov	sp, r7
 8000962:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000966:	4770      	bx	lr

08000968 <USART_ReceiveData>:
 8000968:	b480      	push	{r7}
 800096a:	b083      	sub	sp, #12
 800096c:	af00      	add	r7, sp, #0
 800096e:	6078      	str	r0, [r7, #4]
 8000970:	687b      	ldr	r3, [r7, #4]
 8000972:	889b      	ldrh	r3, [r3, #4]
 8000974:	b29b      	uxth	r3, r3
 8000976:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800097a:	b29b      	uxth	r3, r3
 800097c:	4618      	mov	r0, r3
 800097e:	370c      	adds	r7, #12
 8000980:	46bd      	mov	sp, r7
 8000982:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000986:	4770      	bx	lr

08000988 <USART_GetITStatus>:
 8000988:	b480      	push	{r7}
 800098a:	b087      	sub	sp, #28
 800098c:	af00      	add	r7, sp, #0
 800098e:	6078      	str	r0, [r7, #4]
 8000990:	460b      	mov	r3, r1
 8000992:	807b      	strh	r3, [r7, #2]
 8000994:	2300      	movs	r3, #0
 8000996:	60fb      	str	r3, [r7, #12]
 8000998:	2300      	movs	r3, #0
 800099a:	617b      	str	r3, [r7, #20]
 800099c:	2300      	movs	r3, #0
 800099e:	60bb      	str	r3, [r7, #8]
 80009a0:	2300      	movs	r3, #0
 80009a2:	74fb      	strb	r3, [r7, #19]
 80009a4:	887b      	ldrh	r3, [r7, #2]
 80009a6:	b2db      	uxtb	r3, r3
 80009a8:	095b      	lsrs	r3, r3, #5
 80009aa:	b2db      	uxtb	r3, r3
 80009ac:	60bb      	str	r3, [r7, #8]
 80009ae:	887b      	ldrh	r3, [r7, #2]
 80009b0:	f003 031f 	and.w	r3, r3, #31
 80009b4:	617b      	str	r3, [r7, #20]
 80009b6:	2201      	movs	r2, #1
 80009b8:	697b      	ldr	r3, [r7, #20]
 80009ba:	fa02 f303 	lsl.w	r3, r2, r3
 80009be:	617b      	str	r3, [r7, #20]
 80009c0:	68bb      	ldr	r3, [r7, #8]
 80009c2:	2b01      	cmp	r3, #1
 80009c4:	d107      	bne.n	80009d6 <USART_GetITStatus+0x4e>
 80009c6:	687b      	ldr	r3, [r7, #4]
 80009c8:	899b      	ldrh	r3, [r3, #12]
 80009ca:	b29b      	uxth	r3, r3
 80009cc:	461a      	mov	r2, r3
 80009ce:	697b      	ldr	r3, [r7, #20]
 80009d0:	4013      	ands	r3, r2
 80009d2:	617b      	str	r3, [r7, #20]
 80009d4:	e011      	b.n	80009fa <USART_GetITStatus+0x72>
 80009d6:	68bb      	ldr	r3, [r7, #8]
 80009d8:	2b02      	cmp	r3, #2
 80009da:	d107      	bne.n	80009ec <USART_GetITStatus+0x64>
 80009dc:	687b      	ldr	r3, [r7, #4]
 80009de:	8a1b      	ldrh	r3, [r3, #16]
 80009e0:	b29b      	uxth	r3, r3
 80009e2:	461a      	mov	r2, r3
 80009e4:	697b      	ldr	r3, [r7, #20]
 80009e6:	4013      	ands	r3, r2
 80009e8:	617b      	str	r3, [r7, #20]
 80009ea:	e006      	b.n	80009fa <USART_GetITStatus+0x72>
 80009ec:	687b      	ldr	r3, [r7, #4]
 80009ee:	8a9b      	ldrh	r3, [r3, #20]
 80009f0:	b29b      	uxth	r3, r3
 80009f2:	461a      	mov	r2, r3
 80009f4:	697b      	ldr	r3, [r7, #20]
 80009f6:	4013      	ands	r3, r2
 80009f8:	617b      	str	r3, [r7, #20]
 80009fa:	887b      	ldrh	r3, [r7, #2]
 80009fc:	0a1b      	lsrs	r3, r3, #8
 80009fe:	b29b      	uxth	r3, r3
 8000a00:	60fb      	str	r3, [r7, #12]
 8000a02:	2201      	movs	r2, #1
 8000a04:	68fb      	ldr	r3, [r7, #12]
 8000a06:	fa02 f303 	lsl.w	r3, r2, r3
 8000a0a:	60fb      	str	r3, [r7, #12]
 8000a0c:	687b      	ldr	r3, [r7, #4]
 8000a0e:	881b      	ldrh	r3, [r3, #0]
 8000a10:	b29b      	uxth	r3, r3
 8000a12:	461a      	mov	r2, r3
 8000a14:	68fb      	ldr	r3, [r7, #12]
 8000a16:	4013      	ands	r3, r2
 8000a18:	60fb      	str	r3, [r7, #12]
 8000a1a:	697b      	ldr	r3, [r7, #20]
 8000a1c:	2b00      	cmp	r3, #0
 8000a1e:	d005      	beq.n	8000a2c <USART_GetITStatus+0xa4>
 8000a20:	68fb      	ldr	r3, [r7, #12]
 8000a22:	2b00      	cmp	r3, #0
 8000a24:	d002      	beq.n	8000a2c <USART_GetITStatus+0xa4>
 8000a26:	2301      	movs	r3, #1
 8000a28:	74fb      	strb	r3, [r7, #19]
 8000a2a:	e001      	b.n	8000a30 <USART_GetITStatus+0xa8>
 8000a2c:	2300      	movs	r3, #0
 8000a2e:	74fb      	strb	r3, [r7, #19]
 8000a30:	7cfb      	ldrb	r3, [r7, #19]
 8000a32:	4618      	mov	r0, r3
 8000a34:	371c      	adds	r7, #28
 8000a36:	46bd      	mov	sp, r7
 8000a38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a3c:	4770      	bx	lr

08000a3e <USART_ClearITPendingBit>:
 8000a3e:	b480      	push	{r7}
 8000a40:	b085      	sub	sp, #20
 8000a42:	af00      	add	r7, sp, #0
 8000a44:	6078      	str	r0, [r7, #4]
 8000a46:	460b      	mov	r3, r1
 8000a48:	807b      	strh	r3, [r7, #2]
 8000a4a:	2300      	movs	r3, #0
 8000a4c:	81fb      	strh	r3, [r7, #14]
 8000a4e:	2300      	movs	r3, #0
 8000a50:	81bb      	strh	r3, [r7, #12]
 8000a52:	887b      	ldrh	r3, [r7, #2]
 8000a54:	0a1b      	lsrs	r3, r3, #8
 8000a56:	81fb      	strh	r3, [r7, #14]
 8000a58:	89fb      	ldrh	r3, [r7, #14]
 8000a5a:	2201      	movs	r2, #1
 8000a5c:	fa02 f303 	lsl.w	r3, r2, r3
 8000a60:	81bb      	strh	r3, [r7, #12]
 8000a62:	89bb      	ldrh	r3, [r7, #12]
 8000a64:	43db      	mvns	r3, r3
 8000a66:	b29a      	uxth	r2, r3
 8000a68:	687b      	ldr	r3, [r7, #4]
 8000a6a:	801a      	strh	r2, [r3, #0]
 8000a6c:	bf00      	nop
 8000a6e:	3714      	adds	r7, #20
 8000a70:	46bd      	mov	sp, r7
 8000a72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a76:	4770      	bx	lr

08000a78 <__libc_init_array>:
 8000a78:	b570      	push	{r4, r5, r6, lr}
 8000a7a:	4d0d      	ldr	r5, [pc, #52]	; (8000ab0 <__libc_init_array+0x38>)
 8000a7c:	4c0d      	ldr	r4, [pc, #52]	; (8000ab4 <__libc_init_array+0x3c>)
 8000a7e:	1b64      	subs	r4, r4, r5
 8000a80:	10a4      	asrs	r4, r4, #2
 8000a82:	2600      	movs	r6, #0
 8000a84:	42a6      	cmp	r6, r4
 8000a86:	d109      	bne.n	8000a9c <__libc_init_array+0x24>
 8000a88:	4d0b      	ldr	r5, [pc, #44]	; (8000ab8 <__libc_init_array+0x40>)
 8000a8a:	4c0c      	ldr	r4, [pc, #48]	; (8000abc <__libc_init_array+0x44>)
 8000a8c:	f000 f818 	bl	8000ac0 <_init>
 8000a90:	1b64      	subs	r4, r4, r5
 8000a92:	10a4      	asrs	r4, r4, #2
 8000a94:	2600      	movs	r6, #0
 8000a96:	42a6      	cmp	r6, r4
 8000a98:	d105      	bne.n	8000aa6 <__libc_init_array+0x2e>
 8000a9a:	bd70      	pop	{r4, r5, r6, pc}
 8000a9c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000aa0:	4798      	blx	r3
 8000aa2:	3601      	adds	r6, #1
 8000aa4:	e7ee      	b.n	8000a84 <__libc_init_array+0xc>
 8000aa6:	f855 3b04 	ldr.w	r3, [r5], #4
 8000aaa:	4798      	blx	r3
 8000aac:	3601      	adds	r6, #1
 8000aae:	e7f2      	b.n	8000a96 <__libc_init_array+0x1e>
 8000ab0:	08000ae0 	.word	0x08000ae0
 8000ab4:	08000ae0 	.word	0x08000ae0
 8000ab8:	08000ae0 	.word	0x08000ae0
 8000abc:	08000ae4 	.word	0x08000ae4

08000ac0 <_init>:
 8000ac0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ac2:	bf00      	nop
 8000ac4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000ac6:	bc08      	pop	{r3}
 8000ac8:	469e      	mov	lr, r3
 8000aca:	4770      	bx	lr

08000acc <_fini>:
 8000acc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ace:	bf00      	nop
 8000ad0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000ad2:	bc08      	pop	{r3}
 8000ad4:	469e      	mov	lr, r3
 8000ad6:	4770      	bx	lr
