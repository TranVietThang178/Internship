
Lab9.4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000344  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080004d8  080004e0  000104e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080004d8  080004d8  000104e0  2**0
                  CONTENTS
  4 .ARM          00000000  080004d8  080004d8  000104e0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080004d8  080004e0  000104e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080004d8  080004d8  000104d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080004dc  080004dc  000104dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000104e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000028  20000000  080004e0  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000028  080004e0  00020028  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000104e0  2**0
                  CONTENTS, READONLY
 12 .comment      000000be  00000000  00000000  00010510  2**0
                  CONTENTS, READONLY
 13 .debug_info   000022f4  00000000  00000000  000105ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000944  00000000  00000000  000128c2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000002a0  00000000  00000000  00013208  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000003e  00000000  00000000  000134a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000020aa  00000000  00000000  000134e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00002005  00000000  00000000  00015590  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0003dd96  00000000  00000000  00017595  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000009fc  00000000  00000000  0005532c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005d  00000000  00000000  00055d28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00000200  00000000  00000000  00055d85  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080004c0 	.word	0x080004c0

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	080004c0 	.word	0x080004c0

080001d4 <main>:

void delay_ms(uint32_t milisecond);
uint8_t ButtonCalculateNumOfPress(void);

int main(void)
{
 80001d4:	b480      	push	{r7}
 80001d6:	af00      	add	r7, sp, #0
 80001d8:	2300      	movs	r3, #0

}
 80001da:	4618      	mov	r0, r3
 80001dc:	46bd      	mov	sp, r7
 80001de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001e2:	4770      	bx	lr

080001e4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001e4:	480d      	ldr	r0, [pc, #52]	; (800021c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001e6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001e8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001ec:	480c      	ldr	r0, [pc, #48]	; (8000220 <LoopForever+0x6>)
  ldr r1, =_edata
 80001ee:	490d      	ldr	r1, [pc, #52]	; (8000224 <LoopForever+0xa>)
  ldr r2, =_sidata
 80001f0:	4a0d      	ldr	r2, [pc, #52]	; (8000228 <LoopForever+0xe>)
  movs r3, #0
 80001f2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001f4:	e002      	b.n	80001fc <LoopCopyDataInit>

080001f6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001f6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001f8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001fa:	3304      	adds	r3, #4

080001fc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80001fc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80001fe:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000200:	d3f9      	bcc.n	80001f6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000202:	4a0a      	ldr	r2, [pc, #40]	; (800022c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000204:	4c0a      	ldr	r4, [pc, #40]	; (8000230 <LoopForever+0x16>)
  movs r3, #0
 8000206:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000208:	e001      	b.n	800020e <LoopFillZerobss>

0800020a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800020a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800020c:	3204      	adds	r2, #4

0800020e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800020e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000210:	d3fb      	bcc.n	800020a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000212:	f000 f931 	bl	8000478 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000216:	f7ff ffdd 	bl	80001d4 <main>

0800021a <LoopForever>:

LoopForever:
  b LoopForever
 800021a:	e7fe      	b.n	800021a <LoopForever>
  ldr   r0, =_estack
 800021c:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000220:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000224:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000228:	080004e0 	.word	0x080004e0
  ldr r2, =_sbss
 800022c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000230:	20000028 	.word	0x20000028

08000234 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000234:	e7fe      	b.n	8000234 <ADC_IRQHandler>
	...

08000238 <SysTick_Handler>:
 8000238:	b480      	push	{r7}
 800023a:	af00      	add	r7, sp, #0
 800023c:	4b04      	ldr	r3, [pc, #16]	; (8000250 <SysTick_Handler+0x18>)
 800023e:	681b      	ldr	r3, [r3, #0]
 8000240:	3301      	adds	r3, #1
 8000242:	4a03      	ldr	r2, [pc, #12]	; (8000250 <SysTick_Handler+0x18>)
 8000244:	6013      	str	r3, [r2, #0]
 8000246:	bf00      	nop
 8000248:	46bd      	mov	sp, r7
 800024a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800024e:	4770      	bx	lr
 8000250:	2000001c 	.word	0x2000001c

08000254 <USART2_IRQHandler>:
 8000254:	b580      	push	{r7, lr}
 8000256:	b082      	sub	sp, #8
 8000258:	af00      	add	r7, sp, #0
 800025a:	b672      	cpsid	i
 800025c:	f240 5125 	movw	r1, #1317	; 0x525
 8000260:	480e      	ldr	r0, [pc, #56]	; (800029c <USART2_IRQHandler+0x48>)
 8000262:	f000 f890 	bl	8000386 <USART_GetITStatus>
 8000266:	4603      	mov	r3, r0
 8000268:	2b01      	cmp	r3, #1
 800026a:	d112      	bne.n	8000292 <USART2_IRQHandler+0x3e>
 800026c:	4b0c      	ldr	r3, [pc, #48]	; (80002a0 <USART2_IRQHandler+0x4c>)
 800026e:	681b      	ldr	r3, [r3, #0]
 8000270:	607b      	str	r3, [r7, #4]
 8000272:	480a      	ldr	r0, [pc, #40]	; (800029c <USART2_IRQHandler+0x48>)
 8000274:	f000 f877 	bl	8000366 <USART_ReceiveData>
 8000278:	4603      	mov	r3, r0
 800027a:	b2db      	uxtb	r3, r3
 800027c:	70fb      	strb	r3, [r7, #3]
 800027e:	1cfb      	adds	r3, r7, #3
 8000280:	4619      	mov	r1, r3
 8000282:	6878      	ldr	r0, [r7, #4]
 8000284:	f000 f821 	bl	80002ca <bufEnDat>
 8000288:	f240 5125 	movw	r1, #1317	; 0x525
 800028c:	4803      	ldr	r0, [pc, #12]	; (800029c <USART2_IRQHandler+0x48>)
 800028e:	f000 f8d5 	bl	800043c <USART_ClearITPendingBit>
 8000292:	b662      	cpsie	i
 8000294:	bf00      	nop
 8000296:	3708      	adds	r7, #8
 8000298:	46bd      	mov	sp, r7
 800029a:	bd80      	pop	{r7, pc}
 800029c:	40004400 	.word	0x40004400
 80002a0:	20000020 	.word	0x20000020

080002a4 <bufIsFull>:
 80002a4:	b480      	push	{r7}
 80002a6:	b083      	sub	sp, #12
 80002a8:	af00      	add	r7, sp, #0
 80002aa:	6078      	str	r0, [r7, #4]
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	885a      	ldrh	r2, [r3, #2]
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	881b      	ldrh	r3, [r3, #0]
 80002b4:	429a      	cmp	r2, r3
 80002b6:	bf2c      	ite	cs
 80002b8:	2301      	movcs	r3, #1
 80002ba:	2300      	movcc	r3, #0
 80002bc:	b2db      	uxtb	r3, r3
 80002be:	4618      	mov	r0, r3
 80002c0:	370c      	adds	r7, #12
 80002c2:	46bd      	mov	sp, r7
 80002c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c8:	4770      	bx	lr

080002ca <bufEnDat>:
 80002ca:	b580      	push	{r7, lr}
 80002cc:	b084      	sub	sp, #16
 80002ce:	af00      	add	r7, sp, #0
 80002d0:	6078      	str	r0, [r7, #4]
 80002d2:	6039      	str	r1, [r7, #0]
 80002d4:	b672      	cpsid	i
 80002d6:	2300      	movs	r3, #0
 80002d8:	73fb      	strb	r3, [r7, #15]
 80002da:	e021      	b.n	8000320 <bufEnDat+0x56>
 80002dc:	7bfb      	ldrb	r3, [r7, #15]
 80002de:	683a      	ldr	r2, [r7, #0]
 80002e0:	441a      	add	r2, r3
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	68db      	ldr	r3, [r3, #12]
 80002e6:	6879      	ldr	r1, [r7, #4]
 80002e8:	88c9      	ldrh	r1, [r1, #6]
 80002ea:	440b      	add	r3, r1
 80002ec:	7812      	ldrb	r2, [r2, #0]
 80002ee:	701a      	strb	r2, [r3, #0]
 80002f0:	687b      	ldr	r3, [r7, #4]
 80002f2:	88db      	ldrh	r3, [r3, #6]
 80002f4:	3301      	adds	r3, #1
 80002f6:	b29b      	uxth	r3, r3
 80002f8:	b21a      	sxth	r2, r3
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	881b      	ldrh	r3, [r3, #0]
 80002fe:	3b01      	subs	r3, #1
 8000300:	b29b      	uxth	r3, r3
 8000302:	b21b      	sxth	r3, r3
 8000304:	4013      	ands	r3, r2
 8000306:	b21b      	sxth	r3, r3
 8000308:	b29a      	uxth	r2, r3
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	80da      	strh	r2, [r3, #6]
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	885b      	ldrh	r3, [r3, #2]
 8000312:	3301      	adds	r3, #1
 8000314:	b29a      	uxth	r2, r3
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	805a      	strh	r2, [r3, #2]
 800031a:	7bfb      	ldrb	r3, [r7, #15]
 800031c:	3301      	adds	r3, #1
 800031e:	73fb      	strb	r3, [r7, #15]
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	791b      	ldrb	r3, [r3, #4]
 8000324:	7bfa      	ldrb	r2, [r7, #15]
 8000326:	429a      	cmp	r2, r3
 8000328:	d3d8      	bcc.n	80002dc <bufEnDat+0x12>
 800032a:	6878      	ldr	r0, [r7, #4]
 800032c:	f7ff ffba 	bl	80002a4 <bufIsFull>
 8000330:	4603      	mov	r3, r0
 8000332:	2b00      	cmp	r3, #0
 8000334:	d011      	beq.n	800035a <bufEnDat+0x90>
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	891a      	ldrh	r2, [r3, #8]
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	791b      	ldrb	r3, [r3, #4]
 800033e:	b29b      	uxth	r3, r3
 8000340:	4413      	add	r3, r2
 8000342:	b29b      	uxth	r3, r3
 8000344:	b21a      	sxth	r2, r3
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	881b      	ldrh	r3, [r3, #0]
 800034a:	3b01      	subs	r3, #1
 800034c:	b29b      	uxth	r3, r3
 800034e:	b21b      	sxth	r3, r3
 8000350:	4013      	ands	r3, r2
 8000352:	b21b      	sxth	r3, r3
 8000354:	b29a      	uxth	r2, r3
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	811a      	strh	r2, [r3, #8]
 800035a:	b662      	cpsie	i
 800035c:	2300      	movs	r3, #0
 800035e:	4618      	mov	r0, r3
 8000360:	3710      	adds	r7, #16
 8000362:	46bd      	mov	sp, r7
 8000364:	bd80      	pop	{r7, pc}

08000366 <USART_ReceiveData>:
 8000366:	b480      	push	{r7}
 8000368:	b083      	sub	sp, #12
 800036a:	af00      	add	r7, sp, #0
 800036c:	6078      	str	r0, [r7, #4]
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	889b      	ldrh	r3, [r3, #4]
 8000372:	b29b      	uxth	r3, r3
 8000374:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000378:	b29b      	uxth	r3, r3
 800037a:	4618      	mov	r0, r3
 800037c:	370c      	adds	r7, #12
 800037e:	46bd      	mov	sp, r7
 8000380:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000384:	4770      	bx	lr

08000386 <USART_GetITStatus>:
 8000386:	b480      	push	{r7}
 8000388:	b087      	sub	sp, #28
 800038a:	af00      	add	r7, sp, #0
 800038c:	6078      	str	r0, [r7, #4]
 800038e:	460b      	mov	r3, r1
 8000390:	807b      	strh	r3, [r7, #2]
 8000392:	2300      	movs	r3, #0
 8000394:	60fb      	str	r3, [r7, #12]
 8000396:	2300      	movs	r3, #0
 8000398:	617b      	str	r3, [r7, #20]
 800039a:	2300      	movs	r3, #0
 800039c:	60bb      	str	r3, [r7, #8]
 800039e:	2300      	movs	r3, #0
 80003a0:	74fb      	strb	r3, [r7, #19]
 80003a2:	887b      	ldrh	r3, [r7, #2]
 80003a4:	b2db      	uxtb	r3, r3
 80003a6:	095b      	lsrs	r3, r3, #5
 80003a8:	b2db      	uxtb	r3, r3
 80003aa:	60bb      	str	r3, [r7, #8]
 80003ac:	887b      	ldrh	r3, [r7, #2]
 80003ae:	f003 031f 	and.w	r3, r3, #31
 80003b2:	617b      	str	r3, [r7, #20]
 80003b4:	2201      	movs	r2, #1
 80003b6:	697b      	ldr	r3, [r7, #20]
 80003b8:	fa02 f303 	lsl.w	r3, r2, r3
 80003bc:	617b      	str	r3, [r7, #20]
 80003be:	68bb      	ldr	r3, [r7, #8]
 80003c0:	2b01      	cmp	r3, #1
 80003c2:	d107      	bne.n	80003d4 <USART_GetITStatus+0x4e>
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	899b      	ldrh	r3, [r3, #12]
 80003c8:	b29b      	uxth	r3, r3
 80003ca:	461a      	mov	r2, r3
 80003cc:	697b      	ldr	r3, [r7, #20]
 80003ce:	4013      	ands	r3, r2
 80003d0:	617b      	str	r3, [r7, #20]
 80003d2:	e011      	b.n	80003f8 <USART_GetITStatus+0x72>
 80003d4:	68bb      	ldr	r3, [r7, #8]
 80003d6:	2b02      	cmp	r3, #2
 80003d8:	d107      	bne.n	80003ea <USART_GetITStatus+0x64>
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	8a1b      	ldrh	r3, [r3, #16]
 80003de:	b29b      	uxth	r3, r3
 80003e0:	461a      	mov	r2, r3
 80003e2:	697b      	ldr	r3, [r7, #20]
 80003e4:	4013      	ands	r3, r2
 80003e6:	617b      	str	r3, [r7, #20]
 80003e8:	e006      	b.n	80003f8 <USART_GetITStatus+0x72>
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	8a9b      	ldrh	r3, [r3, #20]
 80003ee:	b29b      	uxth	r3, r3
 80003f0:	461a      	mov	r2, r3
 80003f2:	697b      	ldr	r3, [r7, #20]
 80003f4:	4013      	ands	r3, r2
 80003f6:	617b      	str	r3, [r7, #20]
 80003f8:	887b      	ldrh	r3, [r7, #2]
 80003fa:	0a1b      	lsrs	r3, r3, #8
 80003fc:	b29b      	uxth	r3, r3
 80003fe:	60fb      	str	r3, [r7, #12]
 8000400:	2201      	movs	r2, #1
 8000402:	68fb      	ldr	r3, [r7, #12]
 8000404:	fa02 f303 	lsl.w	r3, r2, r3
 8000408:	60fb      	str	r3, [r7, #12]
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	881b      	ldrh	r3, [r3, #0]
 800040e:	b29b      	uxth	r3, r3
 8000410:	461a      	mov	r2, r3
 8000412:	68fb      	ldr	r3, [r7, #12]
 8000414:	4013      	ands	r3, r2
 8000416:	60fb      	str	r3, [r7, #12]
 8000418:	697b      	ldr	r3, [r7, #20]
 800041a:	2b00      	cmp	r3, #0
 800041c:	d005      	beq.n	800042a <USART_GetITStatus+0xa4>
 800041e:	68fb      	ldr	r3, [r7, #12]
 8000420:	2b00      	cmp	r3, #0
 8000422:	d002      	beq.n	800042a <USART_GetITStatus+0xa4>
 8000424:	2301      	movs	r3, #1
 8000426:	74fb      	strb	r3, [r7, #19]
 8000428:	e001      	b.n	800042e <USART_GetITStatus+0xa8>
 800042a:	2300      	movs	r3, #0
 800042c:	74fb      	strb	r3, [r7, #19]
 800042e:	7cfb      	ldrb	r3, [r7, #19]
 8000430:	4618      	mov	r0, r3
 8000432:	371c      	adds	r7, #28
 8000434:	46bd      	mov	sp, r7
 8000436:	f85d 7b04 	ldr.w	r7, [sp], #4
 800043a:	4770      	bx	lr

0800043c <USART_ClearITPendingBit>:
 800043c:	b480      	push	{r7}
 800043e:	b085      	sub	sp, #20
 8000440:	af00      	add	r7, sp, #0
 8000442:	6078      	str	r0, [r7, #4]
 8000444:	460b      	mov	r3, r1
 8000446:	807b      	strh	r3, [r7, #2]
 8000448:	2300      	movs	r3, #0
 800044a:	81fb      	strh	r3, [r7, #14]
 800044c:	2300      	movs	r3, #0
 800044e:	81bb      	strh	r3, [r7, #12]
 8000450:	887b      	ldrh	r3, [r7, #2]
 8000452:	0a1b      	lsrs	r3, r3, #8
 8000454:	81fb      	strh	r3, [r7, #14]
 8000456:	89fb      	ldrh	r3, [r7, #14]
 8000458:	2201      	movs	r2, #1
 800045a:	fa02 f303 	lsl.w	r3, r2, r3
 800045e:	81bb      	strh	r3, [r7, #12]
 8000460:	89bb      	ldrh	r3, [r7, #12]
 8000462:	43db      	mvns	r3, r3
 8000464:	b29a      	uxth	r2, r3
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	801a      	strh	r2, [r3, #0]
 800046a:	bf00      	nop
 800046c:	3714      	adds	r7, #20
 800046e:	46bd      	mov	sp, r7
 8000470:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000474:	4770      	bx	lr
	...

08000478 <__libc_init_array>:
 8000478:	b570      	push	{r4, r5, r6, lr}
 800047a:	4d0d      	ldr	r5, [pc, #52]	; (80004b0 <__libc_init_array+0x38>)
 800047c:	4c0d      	ldr	r4, [pc, #52]	; (80004b4 <__libc_init_array+0x3c>)
 800047e:	1b64      	subs	r4, r4, r5
 8000480:	10a4      	asrs	r4, r4, #2
 8000482:	2600      	movs	r6, #0
 8000484:	42a6      	cmp	r6, r4
 8000486:	d109      	bne.n	800049c <__libc_init_array+0x24>
 8000488:	4d0b      	ldr	r5, [pc, #44]	; (80004b8 <__libc_init_array+0x40>)
 800048a:	4c0c      	ldr	r4, [pc, #48]	; (80004bc <__libc_init_array+0x44>)
 800048c:	f000 f818 	bl	80004c0 <_init>
 8000490:	1b64      	subs	r4, r4, r5
 8000492:	10a4      	asrs	r4, r4, #2
 8000494:	2600      	movs	r6, #0
 8000496:	42a6      	cmp	r6, r4
 8000498:	d105      	bne.n	80004a6 <__libc_init_array+0x2e>
 800049a:	bd70      	pop	{r4, r5, r6, pc}
 800049c:	f855 3b04 	ldr.w	r3, [r5], #4
 80004a0:	4798      	blx	r3
 80004a2:	3601      	adds	r6, #1
 80004a4:	e7ee      	b.n	8000484 <__libc_init_array+0xc>
 80004a6:	f855 3b04 	ldr.w	r3, [r5], #4
 80004aa:	4798      	blx	r3
 80004ac:	3601      	adds	r6, #1
 80004ae:	e7f2      	b.n	8000496 <__libc_init_array+0x1e>
 80004b0:	080004d8 	.word	0x080004d8
 80004b4:	080004d8 	.word	0x080004d8
 80004b8:	080004d8 	.word	0x080004d8
 80004bc:	080004dc 	.word	0x080004dc

080004c0 <_init>:
 80004c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004c2:	bf00      	nop
 80004c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004c6:	bc08      	pop	{r3}
 80004c8:	469e      	mov	lr, r3
 80004ca:	4770      	bx	lr

080004cc <_fini>:
 80004cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004ce:	bf00      	nop
 80004d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004d2:	bc08      	pop	{r3}
 80004d4:	469e      	mov	lr, r3
 80004d6:	4770      	bx	lr
